module.exports = Backbone.View.extend
  name: '[view:landing]'
  template: template['landing']
  title: -> "Publish free classifieds"

  events: "submit" : "formSubmit"

  start: ->
    @$categoryContainer = @$ '#landing-categories'
    @$classifiedList = @$ ".classifiedList"
    @$logo = @$ "#landing-logo img"

    @classifiedList = new @resources.Views.components.classifiedList
      settings:
        isAccount: false
        enableFilterBox: false
      resources: @resources
      el: @$classifiedList
    @setLogo()


  continue: ->
    console.log @name, 'continue'

    @categoryList = new @resources.Views.components.categoryList
      el: @$categoryContainer
      resources: @resources

    @classifiedList.continue()


  setLogo: ->
    cache = @resources.cache.get 'app:landing-logo'
    if cache
      console.log @name, 'cached logo found!'
      @$logo.attr 'src', cache
    else
      url = @$logo.attr 'cached-src'
      @$logo.attr 'src', url
      @cacheLogo url


  cacheLogo: (url) ->
    console.log @name, 'caching logo'
    image = new Image

    # create an empty canvas element
    canvas = document.createElement 'canvas'
    canvasContext = canvas.getContext '2d'

    image.onload = =>
      #Set canvas size is same as the picture
      canvas.width = image.width
      canvas.height = image.height
      # draw image into canvas element
      canvasContext.drawImage image, 0, 0, image.width, image.height
      # get canvas contents as a data URL (returns png format by default)
      dataURL = canvas.toDataURL()

      @resources.cache.cache 'app:landing-logo', dataURL
      console.log dataURL

    image.src = url

# ---
# generated by js2coffee 2.0.3

  pause: ->
    console.log @name, 'pause'
    @classifiedList.pause()


  # This function redirects the app to the classified search page, with the
  # text in the search box set as the keywords in the GET query.
  formSubmit: (event) ->
    event.preventDefault()
    $keywords = @$ "[name='keywords']"

    # Get the keywords and covert it into a GET query
    text = $keywords.val()
    text.replace ' ', '+'

    # Redirect the app to the classified search page.
    url = "/classified/search/?keywords=#{text}"
    @resources.router.redirect url


  # This method performs the same function as the 'submitClick' method but
  # instead grabs the category too and then redirects the page.
  #
  # The page redirection happens automatically without the user pressing the
  # search button. This is a UX decision.
  selectChange: (event) ->
    $select = @$ "[name='category']"
    $keywords = @$ "[name='keywords']"

    cat = $select.val()
    text = $keywords.val()
    text.replace ' ', '+'

    # Redirect the app to the classified search page.
    url = "/classified/search?category=#{cat}&keywords=#{text}"
    @goto url, 'classified-search'